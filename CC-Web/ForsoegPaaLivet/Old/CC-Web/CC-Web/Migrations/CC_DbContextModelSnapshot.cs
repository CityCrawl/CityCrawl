// <auto-generated />
using CC_Web.Models.CC_DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CC_Web.Migrations
{
    [DbContext(typeof(CC_DbContext))]
    partial class CC_DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CC_Web.Models.Data.Bruger", b =>
                {
                    b.Property<int>("BrugerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityCrawlID")
                        .HasColumnType("int");

                    b.Property<string>("Efternavn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foedselsdag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foravn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrugerID");

                    b.HasIndex("CityCrawlID");

                    b.ToTable("brugere");
                });

            modelBuilder.Entity("CC_Web.Models.Data.CityCrawl", b =>
                {
                    b.Property<int>("CityCrawlID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Begivenhed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sted")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CityCrawlID");

                    b.ToTable("cityCrawls");
                });

            modelBuilder.Entity("CC_Web.Models.Data.Virksomhed", b =>
                {
                    b.Property<int>("VirksomhedID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CVR")
                        .HasColumnType("int");

                    b.Property<int>("CityCrawlID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KontaktPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Virksomhedsnavn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VirksomhedID");

                    b.HasIndex("CityCrawlID");

                    b.ToTable("virksomheder");
                });

            modelBuilder.Entity("CC_Web.Models.Data.Bruger", b =>
                {
                    b.HasOne("CC_Web.Models.Data.CityCrawl", "CC")
                        .WithMany()
                        .HasForeignKey("CityCrawlID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CC");
                });

            modelBuilder.Entity("CC_Web.Models.Data.Virksomhed", b =>
                {
                    b.HasOne("CC_Web.Models.Data.CityCrawl", "CC")
                        .WithMany()
                        .HasForeignKey("CityCrawlID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CC");
                });
#pragma warning restore 612, 618
        }
    }
}
